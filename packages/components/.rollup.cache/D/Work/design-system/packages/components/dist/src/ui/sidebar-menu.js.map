{"version":3,"file":"sidebar-menu.js","sourceRoot":"","sources":["../../../src/ui/sidebar-menu.tsx"],"names":[],"mappings":"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","sourcesContent":["// packages/components/src/ui/sidebar-menu.tsx\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst sidebarMenuVariants = cva(\r\n  [\r\n    \"flex flex-col h-full bg-[var(--color-surface)]\",\r\n    \"border-r border-[var(--color-border)]\",\r\n    \"overflow-y-auto overflow-x-hidden\",\r\n    // Responsive width management\r\n    \"w-64 sm:w-64 md:w-72 lg:w-80\",\r\n    // Mobile responsive - can be controlled by parent\r\n    \"min-w-0 flex-shrink-0\",\r\n  ],\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"w-56 sm:w-56 md:w-60 lg:w-64\",\r\n        md: \"w-64 sm:w-64 md:w-72 lg:w-80\",\r\n        lg: \"w-72 sm:w-72 md:w-80 lg:w-96\",\r\n      },\r\n      mobile: {\r\n        hidden: \"hidden sm:flex\",\r\n        overlay: \"fixed inset-y-0 left-0 z-50 sm:relative sm:inset-auto\",\r\n        push: \"relative\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"md\",\r\n      mobile: \"push\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface SidebarMenuProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof sidebarMenuVariants> {\r\n  children: React.ReactNode;\r\n  mobileOpen?: boolean;\r\n  onMobileToggle?: (open: boolean) => void;\r\n}\r\n\r\nconst SidebarMenu = React.forwardRef<HTMLDivElement, SidebarMenuProps>(\r\n  (\r\n    {\r\n      className,\r\n      children,\r\n      size,\r\n      mobile,\r\n      mobileOpen = false,\r\n      onMobileToggle,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const handleBackdropClick = (e: React.MouseEvent) => {\r\n      if (e.target === e.currentTarget && mobile === \"overlay\") {\r\n        onMobileToggle?.(false);\r\n      }\r\n    };\r\n\r\n    const handleKeyDown = (e: React.KeyboardEvent) => {\r\n      if (e.key === \"Escape\" && mobile === \"overlay\" && mobileOpen) {\r\n        onMobileToggle?.(false);\r\n      }\r\n    };\r\n\r\n    // Mobile overlay backdrop\r\n    if (mobile === \"overlay\") {\r\n      return (\r\n        <>\r\n          {/* Backdrop */}\r\n          {mobileOpen && (\r\n            <div\r\n              className=\"fixed inset-0 bg-black/50 z-40 sm:hidden\"\r\n              onClick={handleBackdropClick}\r\n              onKeyDown={handleKeyDown}\r\n              role=\"button\"\r\n              tabIndex={-1}\r\n              aria-label=\"Close sidebar\"\r\n            />\r\n          )}\r\n\r\n          {/* Sidebar */}\r\n          <nav\r\n            ref={ref}\r\n            className={cn(\r\n              sidebarMenuVariants({ size, mobile }),\r\n              mobileOpen\r\n                ? \"translate-x-0\"\r\n                : \"-translate-x-full sm:translate-x-0\",\r\n              \"transition-transform duration-300 ease-in-out\",\r\n              className\r\n            )}\r\n            role=\"navigation\"\r\n            aria-label=\"Main navigation\"\r\n            aria-hidden={!mobileOpen ? \"true\" : undefined}\r\n            onKeyDown={handleKeyDown}\r\n            {...props}\r\n          >\r\n            {children}\r\n          </nav>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <nav\r\n        ref={ref}\r\n        className={cn(sidebarMenuVariants({ size, mobile }), className)}\r\n        role=\"navigation\"\r\n        aria-label=\"Main navigation\"\r\n        {...props}\r\n      >\r\n        {children}\r\n      </nav>\r\n    );\r\n  }\r\n);\r\nSidebarMenu.displayName = \"SidebarMenu\";\r\n\r\n// Mobile toggle button component\r\nexport interface SidebarToggleProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  open: boolean;\r\n  onToggle: (open: boolean) => void;\r\n}\r\n\r\nconst SidebarToggle = React.forwardRef<HTMLButtonElement, SidebarToggleProps>(\r\n  ({ className, open, onToggle, ...props }, ref) => {\r\n    return (\r\n      <button\r\n        ref={ref}\r\n        onClick={() => onToggle(!open)}\r\n        className={cn(\r\n          \"sm:hidden p-2 rounded-md text-[var(--color-text-body)]\",\r\n          \"hover:bg-[var(--color-accent)] hover:text-[var(--color-accent-foreground)]\",\r\n          \"focus-visible:outline-none focus-visible:bg-[var(--color-focus-500)]\",\r\n          \"focus-visible:text-[var(--color-navy-500)]\",\r\n          className\r\n        )}\r\n        aria-label={open ? \"Close navigation menu\" : \"Open navigation menu\"}\r\n        aria-expanded={open}\r\n        {...props}\r\n      >\r\n        <svg\r\n          className=\"w-6 h-6\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          {open ? (\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M6 18L18 6M6 6l12 12\"\r\n            />\r\n          ) : (\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M4 6h16M4 12h16M4 18h16\"\r\n            />\r\n          )}\r\n        </svg>\r\n      </button>\r\n    );\r\n  }\r\n);\r\nSidebarToggle.displayName = \"SidebarToggle\";\r\n\r\nexport { SidebarMenu, SidebarToggle, sidebarMenuVariants };\r\n"]}