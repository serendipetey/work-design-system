{"version":3,"file":"pagination.js","sourceRoot":"","sources":["../../../src/ui/pagination.tsx"],"names":[],"mappings":"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","sourcesContent":["// File: packages/components/src/ui/pagination.tsx\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Pagination container variants\r\nconst paginationVariants = cva(\r\n  [\"mx-auto flex w-full justify-center items-center space-x-1\"].join(\" \")\r\n);\r\n\r\n// Pagination item variants - inherits from buttonVariants\r\nconst paginationItemVariants = cva(\r\n  [\r\n    // Base styles from buttonVariants but simplified for pagination\r\n    \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium\",\r\n    \"transition-all duration-150 ease-in-out cursor-pointer\",\r\n    \"disabled:pointer-events-none disabled:opacity-50\",\r\n    \"h-8 w-8 p-0\", // Square buttons for page numbers\r\n    // Inherit unified focus states from existing buttons\r\n    \"focus-visible:outline-none\",\r\n    \"focus-visible:!bg-[var(--color-focus-500)]\",\r\n    \"focus-visible:!text-[var(--color-navy-500)]\",\r\n    \"focus-visible:!border-t-0 focus-visible:!border-l-0 focus-visible:!border-r-0\",\r\n    \"focus-visible:!border-b-[3px] focus-visible:!border-b-[var(--color-navy-500)]\",\r\n    \"focus-visible:!shadow-none\",\r\n  ].join(\" \"),\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: [\r\n          \"bg-transparent text-[var(--color-charcoal-500)]\",\r\n          \"border border-transparent\",\r\n          \"hover:bg-[var(--color-gray-100)] hover:text-[var(--color-navy-500)]\",\r\n        ].join(\" \"),\r\n        active: [\r\n          \"bg-[var(--color-primary)] text-[var(--color-white)]\",\r\n          \"border border-[var(--color-primary)]\",\r\n          \"hover:bg-[var(--color-primary)] hover:text-[var(--color-white)]\",\r\n        ].join(\" \"),\r\n        disabled: [\r\n          \"bg-transparent text-[var(--color-gray-400)]\",\r\n          \"border border-transparent\",\r\n          \"cursor-not-allowed\",\r\n        ].join(\" \"),\r\n      },\r\n      size: {\r\n        sm: \"h-6 w-6 text-xs\",\r\n        md: \"h-8 w-8 text-sm\",\r\n        lg: \"h-10 w-10 text-base\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n    },\r\n  }\r\n);\r\n\r\n// Navigation button variants - inherits from buttonVariants but with specific styling\r\nconst paginationNavVariants = cva(\r\n  [\r\n    // Inherit from existing buttonVariants but customize for navigation\r\n    \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium\",\r\n    \"transition-all duration-150 ease-in-out cursor-pointer\",\r\n    \"disabled:pointer-events-none disabled:opacity-50\",\r\n    \"h-8 px-3\", // Rectangular for prev/next\r\n    // Inherit unified focus states\r\n    \"focus-visible:outline-none\",\r\n    \"focus-visible:!bg-[var(--color-focus-500)]\",\r\n    \"focus-visible:!text-[var(--color-navy-500)]\",\r\n    \"focus-visible:!border-t-0 focus-visible:!border-l-0 focus-visible:!border-r-0\",\r\n    \"focus-visible:!border-b-[3px] focus-visible:!border-b-[var(--color-navy-500)]\",\r\n    \"focus-visible:!shadow-none\",\r\n  ].join(\" \"),\r\n  {\r\n    variants: {\r\n      variant: {\r\n        outline: [\r\n          \"bg-transparent text-[var(--color-primary)]\",\r\n          \"border border-[var(--color-primary)]\",\r\n          \"hover:bg-[var(--color-primary)] hover:text-[var(--color-white)]\",\r\n        ].join(\" \"),\r\n        ghost: [\r\n          \"bg-transparent text-[var(--color-charcoal-500)]\",\r\n          \"border border-transparent\",\r\n          \"hover:bg-[var(--color-gray-100)] hover:text-[var(--color-navy-500)]\",\r\n        ].join(\" \"),\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"ghost\",\r\n    },\r\n  }\r\n);\r\n\r\n// Results text variants\r\nconst paginationResultsVariants = cva(\r\n  [\"text-sm text-[var(--color-charcoal-500)]\", \"flex items-center gap-1\"].join(\r\n    \" \"\r\n  )\r\n);\r\n\r\n// Component Interfaces\r\nexport interface PaginationProps extends React.HTMLAttributes<HTMLElement> {\r\n  totalItems: number;\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  onPageChange: (page: number) => void;\r\n  showResults?: boolean;\r\n  maxVisiblePages?: number;\r\n}\r\n\r\nexport interface PaginationItemProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof paginationItemVariants> {\r\n  isActive?: boolean;\r\n  page: number;\r\n}\r\n\r\nexport interface PaginationNavProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof paginationNavVariants> {}\r\n\r\nexport interface PaginationEllipsisProps\r\n  extends React.HTMLAttributes<HTMLSpanElement> {}\r\n\r\nexport interface PaginationResultsProps\r\n  extends React.HTMLAttributes<HTMLDivElement> {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n}\r\n\r\n// Helper function to generate page numbers\r\nconst generatePageNumbers = (\r\n  currentPage: number,\r\n  totalPages: number,\r\n  maxVisible: number = 7\r\n): (number | \"ellipsis\")[] => {\r\n  if (totalPages <= maxVisible) {\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  }\r\n\r\n  const halfVisible = Math.floor(maxVisible / 2);\r\n  const pages: (number | \"ellipsis\")[] = [];\r\n\r\n  if (currentPage <= halfVisible + 1) {\r\n    // Show: 1, 2, 3, 4, ..., last\r\n    for (let i = 1; i <= maxVisible - 2; i++) {\r\n      pages.push(i);\r\n    }\r\n    pages.push(\"ellipsis\");\r\n    pages.push(totalPages);\r\n  } else if (currentPage >= totalPages - halfVisible) {\r\n    // Show: 1, ..., last-3, last-2, last-1, last\r\n    pages.push(1);\r\n    pages.push(\"ellipsis\");\r\n    for (let i = totalPages - (maxVisible - 3); i <= totalPages; i++) {\r\n      pages.push(i);\r\n    }\r\n  } else {\r\n    // Show: 1, ..., current-1, current, current+1, ..., last\r\n    pages.push(1);\r\n    pages.push(\"ellipsis\");\r\n    for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n      pages.push(i);\r\n    }\r\n    pages.push(\"ellipsis\");\r\n    pages.push(totalPages);\r\n  }\r\n\r\n  return pages;\r\n};\r\n\r\n// Pagination Components\r\nconst Pagination = React.forwardRef<HTMLElement, PaginationProps>(\r\n  (\r\n    {\r\n      className,\r\n      totalItems,\r\n      currentPage,\r\n      itemsPerPage,\r\n      onPageChange,\r\n      showResults = true,\r\n      maxVisiblePages = 7,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n    const pages = generatePageNumbers(currentPage, totalPages, maxVisiblePages);\r\n\r\n    if (totalPages <= 1) return null;\r\n\r\n    return (\r\n      <nav\r\n        ref={ref}\r\n        role=\"navigation\"\r\n        aria-label=\"pagination\"\r\n        className={cn(\"flex flex-col space-y-4\", className)}\r\n        {...props}\r\n      >\r\n        {/* Results count */}\r\n        {showResults && (\r\n          <PaginationResults\r\n            currentPage={currentPage}\r\n            itemsPerPage={itemsPerPage}\r\n            totalItems={totalItems}\r\n          />\r\n        )}\r\n\r\n        {/* Pagination controls */}\r\n        <div className={cn(paginationVariants())}>\r\n          {/* Previous button */}\r\n          <PaginationPrevious\r\n            onClick={() => onPageChange(currentPage - 1)}\r\n            disabled={currentPage === 1}\r\n          />\r\n\r\n          {/* Page numbers */}\r\n          {pages.map((page, index) =>\r\n            page === \"ellipsis\" ? (\r\n              <PaginationEllipsis key={`ellipsis-${index}`} />\r\n            ) : (\r\n              <PaginationItem\r\n                key={page}\r\n                page={page}\r\n                isActive={page === currentPage}\r\n                onClick={() => onPageChange(page)}\r\n              />\r\n            )\r\n          )}\r\n\r\n          {/* Next button */}\r\n          <PaginationNext\r\n            onClick={() => onPageChange(currentPage + 1)}\r\n            disabled={currentPage === totalPages}\r\n          />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n);\r\nPagination.displayName = \"Pagination\";\r\n\r\nconst PaginationItem = React.forwardRef<HTMLButtonElement, PaginationItemProps>(\r\n  ({ className, isActive, page, variant, size, ...props }, ref) => (\r\n    <button\r\n      ref={ref}\r\n      className={cn(\r\n        paginationItemVariants({\r\n          variant: isActive ? \"active\" : variant,\r\n          size,\r\n        }),\r\n        className\r\n      )}\r\n      aria-label={`Go to page ${page}`}\r\n      aria-current={isActive ? \"page\" : undefined}\r\n      {...props}\r\n    >\r\n      {page}\r\n    </button>\r\n  )\r\n);\r\nPaginationItem.displayName = \"PaginationItem\";\r\n\r\nconst PaginationPrevious = React.forwardRef<\r\n  HTMLButtonElement,\r\n  PaginationNavProps\r\n>(({ className, variant = \"ghost\", ...props }, ref) => (\r\n  <button\r\n    ref={ref}\r\n    className={cn(paginationNavVariants({ variant }), className)}\r\n    aria-label=\"Go to previous page\"\r\n    {...props}\r\n  >\r\n    <svg\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"none\"\r\n      className=\"mr-1\"\r\n    >\r\n      <path\r\n        d=\"M10 12L6 8L10 4\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n      />\r\n    </svg>\r\n    Previous\r\n  </button>\r\n));\r\nPaginationPrevious.displayName = \"PaginationPrevious\";\r\n\r\nconst PaginationNext = React.forwardRef<HTMLButtonElement, PaginationNavProps>(\r\n  ({ className, variant = \"ghost\", ...props }, ref) => (\r\n    <button\r\n      ref={ref}\r\n      className={cn(paginationNavVariants({ variant }), className)}\r\n      aria-label=\"Go to next page\"\r\n      {...props}\r\n    >\r\n      Next\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill=\"none\"\r\n        className=\"ml-1\"\r\n      >\r\n        <path\r\n          d=\"M6 4L10 8L6 12\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  )\r\n);\r\nPaginationNext.displayName = \"PaginationNext\";\r\n\r\nconst PaginationEllipsis = React.forwardRef<\r\n  HTMLSpanElement,\r\n  PaginationEllipsisProps\r\n>(({ className, ...props }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    aria-hidden\r\n    className={cn(\r\n      \"flex h-8 w-8 items-center justify-center text-[var(--color-charcoal-500)]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    …\r\n  </span>\r\n));\r\nPaginationEllipsis.displayName = \"PaginationEllipsis\";\r\n\r\nconst PaginationResults = React.forwardRef<\r\n  HTMLDivElement,\r\n  PaginationResultsProps\r\n>(({ className, currentPage, itemsPerPage, totalItems, ...props }, ref) => {\r\n  const startItem = (currentPage - 1) * itemsPerPage + 1;\r\n  const endItem = Math.min(currentPage * itemsPerPage, totalItems);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(paginationResultsVariants(), className)}\r\n      {...props}\r\n    >\r\n      <span>Showing</span>\r\n      <strong>{startItem}</strong>\r\n      <span>to</span>\r\n      <strong>{endItem}</strong>\r\n      <span>of</span>\r\n      <strong>{totalItems}</strong>\r\n      <span>results</span>\r\n    </div>\r\n  );\r\n});\r\nPaginationResults.displayName = \"PaginationResults\";\r\n\r\nexport {\r\n  Pagination,\r\n  PaginationItem,\r\n  PaginationPrevious,\r\n  PaginationNext,\r\n  PaginationEllipsis,\r\n  PaginationResults,\r\n  paginationVariants,\r\n  paginationItemVariants,\r\n  paginationNavVariants,\r\n  paginationResultsVariants,\r\n};\r\n"]}