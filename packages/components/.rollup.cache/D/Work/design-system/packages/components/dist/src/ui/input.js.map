{"version":3,"file":"input.js","sourceRoot":"","sources":["../../../src/ui/input.tsx"],"names":[],"mappings":"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","sourcesContent":["// packages/components/src/ui/input.tsx\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Input component variants using your design tokens\r\nconst inputVariants = cva(\r\n  [\r\n    // Base styles using design tokens\r\n    \"flex h-10 w-full rounded-md border bg-background px-3 py-2\",\r\n    \"text-sm transition-all duration-200\",\r\n    \"file:border-0 file:bg-transparent file:text-sm file:font-medium\",\r\n    \"placeholder:text-muted-foreground\",\r\n    \"disabled:cursor-not-allowed disabled:opacity-50\",\r\n    // Focus styles - 3px darker orange outline, keep original border\r\n    \"focus-visible:outline-none\",\r\n    \"focus-visible:ring-0\",\r\n    \"focus-visible:shadow-[0_0_0_3px_rgba(255,153,0,0.8)]\", // 3px darker orange outline\r\n    \"focus:shadow-[0_0_0_3px_rgba(255,153,0,0.8)]\", // Same for :focus\r\n  ],\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: [\r\n          \"border-[var(--color-border)]\",\r\n          \"text-[var(--color-input-text)]\",\r\n          \"placeholder:text-[var(--color-input-placeholder)]\",\r\n        ],\r\n        error: [\r\n          \"border-[var(--color-border-error)]\",\r\n          \"text-[var(--color-input-text-error)]\",\r\n          // Override with darker error focus shadow\r\n          \"focus-visible:shadow-[0_0_0_3px_rgba(235,0,0,0.6)]\",\r\n          \"focus:shadow-[0_0_0_3px_rgba(235,0,0,0.6)]\",\r\n        ],\r\n        success: [\r\n          \"border-[var(--color-border-success)]\",\r\n          \"text-[var(--color-input-text-success)]\",\r\n          // Override with darker success focus shadow\r\n          \"focus-visible:shadow-[0_0_0_3px_rgba(0,125,133,0.6)]\",\r\n          \"focus:shadow-[0_0_0_3px_rgba(0,125,133,0.6)]\",\r\n        ],\r\n        warning: [\r\n          \"border-[var(--color-border-warning)]\",\r\n          \"text-[var(--color-input-text-warning)]\",\r\n          // Override with darker warning focus shadow\r\n          \"focus-visible:shadow-[0_0_0_3px_rgba(183,91,0,0.8)]\",\r\n          \"focus:shadow-[0_0_0_3px_rgba(183,91,0,0.8)]\",\r\n        ],\r\n      },\r\n      size: {\r\n        sm: \"h-8 px-2 py-1 text-xs\",\r\n        md: \"h-10 px-3 py-2 text-sm\",\r\n        lg: \"h-12 px-4 py-3 text-base\",\r\n        xl: \"h-14 px-5 py-4 text-lg\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"md\",\r\n    },\r\n  }\r\n);\r\n\r\n// Label variants using your typography tokens\r\nconst labelVariants = cva(\r\n  [\r\n    \"typography-label\",\r\n    \"text-sm font-medium leading-none\",\r\n    \"peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n  ],\r\n  {\r\n    variants: {\r\n      state: {\r\n        default: \"text-[var(--color-input-label)]\",\r\n        required: \"text-[var(--color-input-label)]\",\r\n        optional: \"text-[var(--color-input-label)]\",\r\n        disabled: \"text-[var(--color-input-text-disabled)]\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      state: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\n// Helper text variants using your design tokens\r\nconst helperVariants = cva([\"typography-helper\", \"text-xs mt-1\"], {\r\n  variants: {\r\n    variant: {\r\n      default: \"text-[var(--color-input-helper)]\",\r\n      error: \"text-[var(--color-input-text-error)]\",\r\n      success: \"text-[var(--color-input-text-success)]\",\r\n      warning: \"text-[var(--color-input-text-warning)]\",\r\n      muted: \"text-[var(--color-text-muted)]\",\r\n    },\r\n  },\r\n  defaultVariants: {\r\n    variant: \"default\",\r\n  },\r\n});\r\n\r\nexport interface InputProps\r\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, \"size\">,\r\n    VariantProps<typeof inputVariants> {\r\n  // Label system\r\n  label?: string;\r\n  labelState?: \"default\" | \"required\" | \"optional\";\r\n  showLabel?: boolean;\r\n\r\n  // Helper/hint text system\r\n  hintText?: string;\r\n  showHintText?: boolean;\r\n  helperText?: string;\r\n\r\n  // Icon and text system\r\n  leftIcon?: React.ReactNode;\r\n  rightIcon?: React.ReactNode;\r\n  leftText?: string;\r\n  rightText?: string;\r\n\r\n  // State management\r\n  error?: string | boolean;\r\n  success?: string | boolean;\r\n  warning?: string | boolean;\r\n\r\n  // Loading state\r\n  loading?: boolean;\r\n\r\n  // Custom class names\r\n  containerClassName?: string;\r\n  labelClassName?: string;\r\n  inputClassName?: string;\r\n  helperClassName?: string;\r\n\r\n  // Clearable functionality\r\n  clearable?: boolean;\r\n  onClear?: () => void;\r\n}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  (\r\n    {\r\n      className,\r\n      containerClassName,\r\n      labelClassName,\r\n      inputClassName,\r\n      helperClassName,\r\n      type = \"text\",\r\n      variant,\r\n      size,\r\n      label,\r\n      labelState = \"default\",\r\n      showLabel = true,\r\n      hintText,\r\n      showHintText = true,\r\n      helperText,\r\n      leftIcon,\r\n      rightIcon,\r\n      leftText,\r\n      rightText,\r\n      error,\r\n      success,\r\n      warning,\r\n      loading,\r\n      clearable,\r\n      onClear,\r\n      value,\r\n      disabled,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    // Determine the current variant based on state\r\n    const currentVariant = React.useMemo(() => {\r\n      if (error) return \"error\";\r\n      if (success) return \"success\";\r\n      if (warning) return \"warning\";\r\n      return variant || \"default\";\r\n    }, [error, success, warning, variant]);\r\n\r\n    // Determine helper text content and variant\r\n    const helperContent = React.useMemo(() => {\r\n      if (error && typeof error === \"string\") return error;\r\n      if (success && typeof success === \"string\") return success;\r\n      if (warning && typeof warning === \"string\") return warning;\r\n      return helperText;\r\n    }, [error, success, warning, helperText]);\r\n\r\n    const helperVariant = React.useMemo(() => {\r\n      if (error) return \"error\";\r\n      if (success) return \"success\";\r\n      if (warning) return \"warning\";\r\n      return \"default\";\r\n    }, [error, success, warning]);\r\n\r\n    // Generate unique ID for accessibility\r\n    const inputId = React.useId();\r\n    const helperTextId = React.useId();\r\n\r\n    // Show clear button logic\r\n    const showClear = clearable && value && !disabled && !loading;\r\n\r\n    // Left and right content logic\r\n    const hasLeftContent = leftIcon || leftText;\r\n    const hasRightContent = rightIcon || rightText || showClear || loading;\r\n\r\n    // Clear icon component\r\n    const ClearIcon = () => (\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 24 24\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeWidth=\"2\"\r\n        className=\"h-4 w-4\"\r\n      >\r\n        <path d=\"M18 6L6 18M6 6l12 12\" />\r\n      </svg>\r\n    );\r\n\r\n    // Loading spinner component\r\n    const LoadingSpinner = () => (\r\n      <svg\r\n        className=\"animate-spin h-4 w-4 text-[var(--color-text-muted)]\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n      >\r\n        <circle\r\n          className=\"opacity-25\"\r\n          cx=\"12\"\r\n          cy=\"12\"\r\n          r=\"10\"\r\n          stroke=\"currentColor\"\r\n          strokeWidth=\"4\"\r\n        />\r\n        <path\r\n          className=\"opacity-75\"\r\n          fill=\"currentColor\"\r\n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\r\n        />\r\n      </svg>\r\n    );\r\n\r\n    return (\r\n      <div className={cn(\"space-y-2\", containerClassName)}>\r\n        {/* Label */}\r\n        {showLabel && label && (\r\n          <div className=\"flex items-center gap-1\">\r\n            <label\r\n              htmlFor={inputId}\r\n              className={cn(\r\n                labelVariants({\r\n                  state: disabled ? \"disabled\" : labelState,\r\n                }),\r\n                labelClassName\r\n              )}\r\n            >\r\n              {label}\r\n            </label>\r\n            {/* Required text in red parentheses */}\r\n            {labelState === \"required\" && (\r\n              <span className=\"text-[var(--color-input-label-required)] text-sm\">\r\n                (Required)\r\n              </span>\r\n            )}\r\n            {labelState === \"optional\" && (\r\n              <span className=\"text-[var(--color-input-label-optional)] text-sm\">\r\n                (Optional)\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Hint Text */}\r\n        {showHintText && hintText && (\r\n          <p className={cn(helperVariants({ variant: \"muted\" }))}>{hintText}</p>\r\n        )}\r\n\r\n        {/* Input Container */}\r\n        <div className=\"relative\">\r\n          {/* Left Content (Icon or Text) */}\r\n          {hasLeftContent && (\r\n            <div className=\"absolute left-3 top-1/2 -translate-y-1/2 text-[var(--color-navy-500)] text-sm font-medium\">\r\n              {leftIcon || leftText}\r\n            </div>\r\n          )}\r\n\r\n          {/* Input Field */}\r\n          <input\r\n            id={inputId}\r\n            type={type}\r\n            ref={ref}\r\n            value={value}\r\n            disabled={disabled || loading}\r\n            aria-invalid={!!error}\r\n            aria-describedby={helperContent ? helperTextId : undefined}\r\n            className={cn(\r\n              inputVariants({ variant: currentVariant, size }),\r\n              hasLeftContent && \"pl-10\",\r\n              hasRightContent && \"pr-10\",\r\n              className,\r\n              inputClassName\r\n            )}\r\n            {...props}\r\n          />\r\n\r\n          {/* Right Content (Icons, Text, Clear, Loading) */}\r\n          <div className=\"absolute right-3 top-1/2 -translate-y-1/2 flex items-center gap-2\">\r\n            {loading && <LoadingSpinner />}\r\n            {showClear && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClear}\r\n                className=\"text-[var(--color-navy-500)] hover:text-[var(--color-navy-600)] transition-colors\"\r\n                aria-label=\"Clear input\"\r\n              >\r\n                <ClearIcon />\r\n              </button>\r\n            )}\r\n            {rightText && !loading && !showClear && (\r\n              <span className=\"text-[var(--color-navy-500)] text-sm font-medium\">\r\n                {rightText}\r\n              </span>\r\n            )}\r\n            {rightIcon && !loading && !showClear && !rightText && (\r\n              <div className=\"text-[var(--color-navy-500)]\">{rightIcon}</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Helper Text */}\r\n        {helperContent && (\r\n          <p\r\n            id={helperTextId}\r\n            className={cn(\r\n              helperVariants({ variant: helperVariant }),\r\n              helperClassName\r\n            )}\r\n          >\r\n            {helperContent}\r\n          </p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input, inputVariants, labelVariants, helperVariants };\r\n"]}