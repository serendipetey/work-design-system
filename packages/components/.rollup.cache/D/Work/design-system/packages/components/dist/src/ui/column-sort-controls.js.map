{"version":3,"file":"column-sort-controls.js","sourceRoot":"","sources":["../../../src/ui/column-sort-controls.tsx"],"names":[],"mappings":";AAEA,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AACnD,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAC;AAClC,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAajC,MAAM,aAAa,GAAG,CAAC,EAAE,SAAS,EAAiC,EAAE,EAAE,CAAC,CACtE,cACE,KAAK,EAAC,IAAI,EACV,MAAM,EAAC,IAAI,EACX,OAAO,EAAC,WAAW,EACnB,SAAS,EAAE,EAAE,CACX,mCAAmC,EACnC,SAAS,KAAK,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,UAAU,CACjD,YAED,eAAM,CAAC,EAAC,6BAA6B,EAAC,IAAI,EAAC,cAAc,GAAG,GACxD,CACP,CAAC;AAEF,MAAM,CAAC,MAAM,kBAAkB,GAAsC,CAAC,EACpE,OAAO,EACP,aAAa,EACb,gBAAgB,GAAG,KAAK,EACxB,cAAc,EACd,iBAAiB,EACjB,SAAS,EACT,QAAQ,GAAG,KAAK,GACjB,EAAE,EAAE;IACH,kCAAkC;IAClC,MAAM,eAAe,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAE9D,0BAA0B;IAC1B,MAAM,kBAAkB,GAAG,CAAC,KAAa,EAAE,EAAE;QAC3C,IAAI,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,EAAE,EAAE,CAAC;YACrC,cAAc,EAAE,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,cAAc,EAAE,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC,CAAC;IAEF,0BAA0B;IAC1B,MAAM,qBAAqB,GAAG,GAAG,EAAE;QACjC,MAAM,YAAY,GAAG,gBAAgB,KAAK,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC;QACjE,iBAAiB,EAAE,CAAC,YAAY,CAAC,CAAC;IACpC,CAAC,CAAC;IAEF,sCAAsC;IACtC,MAAM,WAAW,GAAG,aAAa,IAAI,MAAM,CAAC;IAE5C,OAAO,CACL,eAAK,SAAS,EAAE,EAAE,CAAC,yBAAyB,EAAE,SAAS,CAAC,aAEtD,MAAC,WAAW,IACV,KAAK,EAAE,WAAW,EAClB,aAAa,EAAE,kBAAkB,EACjC,IAAI,EAAC,IAAI,EACT,QAAQ,EAAE,QAAQ,EAClB,SAAS,EAAE,KAAK,EAChB,WAAW,EAAC,gBAAgB,EAC5B,SAAS,EAAC,eAAe,aAEzB,KAAC,UAAU,IAAC,KAAK,EAAC,MAAM,2BAAwB,EAC/C,eAAe,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAC/B,KAAC,UAAU,IAAkB,KAAK,EAAE,MAAM,CAAC,GAAG,YAC3C,MAAM,CAAC,MAAM,IADC,MAAM,CAAC,GAAG,CAEd,CACd,CAAC,IACU,EAGd,KAAC,MAAM,IACL,OAAO,EAAC,OAAO,EACf,IAAI,EAAC,IAAI,EACT,OAAO,EAAE,qBAAqB,EAC9B,QAAQ,EAAE,QAAQ,IAAI,CAAC,aAAa,gBACxB,QACV,gBAAgB,KAAK,KAAK,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,YAC7C,EAAE,EACF,SAAS,EAAC,MAAM,YAEhB,KAAC,aAAa,IAAC,SAAS,EAAE,gBAAgB,GAAI,GACvC,IACL,CACP,CAAC;AACJ,CAAC,CAAC","sourcesContent":["// packages/components/src/ui/column-sort-controls.tsx\r\nimport * as React from \"react\";\r\nimport { SelectField, SelectItem } from \"./select\";\r\nimport { Button } from \"./button\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport type { DataTableColumn } from \"./data-table\";\r\n\r\nexport interface ColumnSortControlsProps {\r\n  columns: DataTableColumn[];\r\n  currentColumn?: string | null;\r\n  currentDirection?: \"asc\" | \"desc\";\r\n  onColumnChange?: (column: string | null) => void;\r\n  onDirectionChange?: (direction: \"asc\" | \"desc\") => void;\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst DirectionIcon = ({ direction }: { direction: \"asc\" | \"desc\" }) => (\r\n  <svg\r\n    width=\"16\"\r\n    height=\"16\"\r\n    viewBox=\"0 0 16 16\"\r\n    className={cn(\r\n      \"transition-transform duration-150\",\r\n      direction === \"desc\" ? \"rotate-180\" : \"rotate-0\"\r\n    )}\r\n  >\r\n    <path d=\"M8 2L6 6h1.5v8h1v-8H10L8 2z\" fill=\"currentColor\" />\r\n  </svg>\r\n);\r\n\r\nexport const ColumnSortControls: React.FC<ColumnSortControlsProps> = ({\r\n  columns,\r\n  currentColumn,\r\n  currentDirection = \"asc\",\r\n  onColumnChange,\r\n  onDirectionChange,\r\n  className,\r\n  disabled = false,\r\n}) => {\r\n  // Filter to only sortable columns\r\n  const sortableColumns = columns.filter((col) => col.sortable);\r\n\r\n  // Handle column selection\r\n  const handleColumnChange = (value: string) => {\r\n    if (value === \"none\" || value === \"\") {\r\n      onColumnChange?.(null);\r\n    } else {\r\n      onColumnChange?.(value);\r\n    }\r\n  };\r\n\r\n  // Handle direction toggle\r\n  const handleDirectionToggle = () => {\r\n    const newDirection = currentDirection === \"asc\" ? \"desc\" : \"asc\";\r\n    onDirectionChange?.(newDirection);\r\n  };\r\n\r\n  // Get current column value for select\r\n  const selectValue = currentColumn || \"none\";\r\n\r\n  return (\r\n    <div className={cn(\"flex items-center gap-2\", className)}>\r\n      {/* Column Selection Dropdown */}\r\n      <SelectField\r\n        value={selectValue}\r\n        onValueChange={handleColumnChange}\r\n        size=\"md\"\r\n        disabled={disabled}\r\n        showLabel={false}\r\n        placeholder=\"Sort by column\"\r\n        className=\"min-w-[160px]\"\r\n      >\r\n        <SelectItem value=\"none\">No sorting</SelectItem>\r\n        {sortableColumns.map((column) => (\r\n          <SelectItem key={column.key} value={column.key}>\r\n            {column.header}\r\n          </SelectItem>\r\n        ))}\r\n      </SelectField>\r\n\r\n      {/* Direction Toggle Button */}\r\n      <Button\r\n        variant=\"ghost\"\r\n        size=\"md\"\r\n        onClick={handleDirectionToggle}\r\n        disabled={disabled || !currentColumn}\r\n        aria-label={`Sort ${\r\n          currentDirection === \"asc\" ? \"ascending\" : \"descending\"\r\n        }`}\r\n        className=\"px-3\"\r\n      >\r\n        <DirectionIcon direction={currentDirection} />\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n"]}