{"version":3,"file":"data-table.js","sourceRoot":"","sources":["../../../src/ui/data-table.tsx"],"names":[],"mappings":"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","sourcesContent":["// packages/components/src/ui/data-table.tsx\r\nimport * as React from \"react\";\r\nimport { Button } from \"./button\";\r\nimport { Input } from \"./input\";\r\nimport {\r\n  Table,\r\n  TableHeader,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableCell,\r\n} from \"./table\";\r\nimport { Pagination } from \"./pagination\";\r\nimport { ColumnSortControls } from \"./column-sort-controls\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Default icons - replace with your icon system\r\nconst SearchIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n    <path\r\n      d=\"M7.333 12.667A5.333 5.333 0 1 0 7.333 2a5.333 5.333 0 0 0 0 10.667ZM14 14l-2.9-2.9\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst EditIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n    <path\r\n      d=\"M7.333 2.667H2.667A1.333 1.333 0 0 0 1.333 4v9.333A1.333 1.333 0 0 0 2.667 14.667H12a1.333 1.333 0 0 0 1.333-1.334V8\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n    <path\r\n      d=\"M12.333 1.667a1.414 1.414 0 1 1 2 2L8 10l-2.667.667L6 8l6.333-6.333Z\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nconst DeleteIcon = () => (\r\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\r\n    <path\r\n      d=\"M2 4h12M5.333 4V2.667a1.333 1.333 0 0 1 1.334-1.334h2.666a1.333 1.333 0 0 1 1.334 1.334V4m2 0v9.333a1.333 1.333 0 0 1-1.334 1.334H4.667a1.333 1.333 0 0 1-1.334-1.334V4h8.667Z\"\r\n      stroke=\"currentColor\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n\r\n// Types\r\nexport interface DataTableColumn<TData = any> {\r\n  key: string;\r\n  header: string;\r\n  sortable?: boolean;\r\n  width?: string;\r\n  render?: (value: any, row: TData, index: number) => React.ReactNode;\r\n  className?: string;\r\n}\r\n\r\nexport interface DataTableAction<TData = any> {\r\n  label: string;\r\n  icon?: React.ReactNode;\r\n  onClick: (row: TData, index: number) => void;\r\n  variant?: \"ghost\" | \"outline\" | \"primary\" | \"destructive\";\r\n  className?: string;\r\n  disabled?: (row: TData) => boolean;\r\n}\r\n\r\nexport interface DataTableToolbarAction {\r\n  label: string;\r\n  icon?: React.ReactNode;\r\n  onClick: () => void;\r\n  variant?: \"primary\" | \"outline\" | \"ghost\";\r\n  className?: string;\r\n}\r\n\r\nexport interface DataTableProps<TData = any> {\r\n  // Data\r\n  data: TData[];\r\n  columns: DataTableColumn<TData>[];\r\n\r\n  // Table configuration\r\n  title?: string;\r\n  description?: string;\r\n  className?: string;\r\n\r\n  // Search\r\n  searchable?: boolean;\r\n  searchPlaceholder?: string;\r\n  onSearch?: (query: string) => void;\r\n\r\n  // Sorting\r\n  defaultSort?: {\r\n    key: string;\r\n    direction: \"asc\" | \"desc\";\r\n  };\r\n  onSort?: (key: string, direction: \"asc\" | \"desc\") => void;\r\n\r\n  // Pagination\r\n  pagination?: {\r\n    pageSize?: number;\r\n    showResults?: boolean;\r\n    maxVisiblePages?: number;\r\n  };\r\n\r\n  // Actions\r\n  rowActions?: DataTableAction<TData>[];\r\n  toolbarActions?: DataTableToolbarAction[];\r\n\r\n  // Footer actions\r\n  footerActions?: DataTableToolbarAction[];\r\n\r\n  // Loading and empty states\r\n  loading?: boolean;\r\n  emptyMessage?: string;\r\n\r\n  // Row configuration\r\n  striped?: boolean;\r\n  hoverable?: boolean;\r\n\r\n  // Custom row key\r\n  getRowKey?: (row: TData, index: number) => string;\r\n}\r\n\r\n// Hook for data table state management\r\nfunction useDataTable<TData>(\r\n  data: TData[],\r\n  options: {\r\n    searchable?: boolean;\r\n    defaultSort?: { key: string; direction: \"asc\" | \"desc\" };\r\n    pageSize?: number;\r\n  } = {}\r\n) {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n  const [sortField, setSortField] = React.useState<string | null>(\r\n    options.defaultSort?.key || null\r\n  );\r\n  const [sortDirection, setSortDirection] = React.useState<\"asc\" | \"desc\">(\r\n    options.defaultSort?.direction || \"asc\"\r\n  );\r\n  const [currentPage, setCurrentPage] = React.useState(1);\r\n\r\n  // Filter data based on search\r\n  const filteredData = React.useMemo(() => {\r\n    if (!options.searchable || !searchQuery) return data;\r\n\r\n    return data.filter((item) =>\r\n      Object.values(item as any).some((value) =>\r\n        String(value).toLowerCase().includes(searchQuery.toLowerCase())\r\n      )\r\n    );\r\n  }, [data, searchQuery, options.searchable]);\r\n\r\n  // Sort filtered data\r\n  const sortedData = React.useMemo(() => {\r\n    if (!sortField) return filteredData;\r\n\r\n    return [...filteredData].sort((a, b) => {\r\n      const aValue = (a as any)[sortField];\r\n      const bValue = (b as any)[sortField];\r\n      const multiplier = sortDirection === \"asc\" ? 1 : -1;\r\n\r\n      if (typeof aValue === \"string\" && typeof bValue === \"string\") {\r\n        return aValue.localeCompare(bValue) * multiplier;\r\n      }\r\n\r\n      if (aValue < bValue) return -1 * multiplier;\r\n      if (aValue > bValue) return 1 * multiplier;\r\n      return 0;\r\n    });\r\n  }, [filteredData, sortField, sortDirection]);\r\n\r\n  // Paginate sorted data\r\n  const pageSize = options.pageSize || 10;\r\n  const paginatedData = React.useMemo(() => {\r\n    const startIndex = (currentPage - 1) * pageSize;\r\n    return sortedData.slice(startIndex, startIndex + pageSize);\r\n  }, [sortedData, currentPage, pageSize]);\r\n\r\n  // Handle sort column change\r\n  const handleSortColumnChange = React.useCallback((key: string | null) => {\r\n    setSortField(key);\r\n    setCurrentPage(1); // Reset to first page\r\n  }, []);\r\n\r\n  // Handle sort direction change\r\n  const handleSortDirectionChange = React.useCallback(\r\n    (direction: \"asc\" | \"desc\") => {\r\n      setSortDirection(direction);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Handle search\r\n  const handleSearch = React.useCallback((query: string) => {\r\n    setSearchQuery(query);\r\n    setCurrentPage(1); // Reset to first page\r\n  }, []);\r\n\r\n  // Handle page change\r\n  const handlePageChange = React.useCallback((page: number) => {\r\n    setCurrentPage(page);\r\n  }, []);\r\n\r\n  return {\r\n    // Data\r\n    paginatedData,\r\n    totalItems: sortedData.length,\r\n\r\n    // State\r\n    searchQuery,\r\n    sortField,\r\n    sortDirection,\r\n    currentPage,\r\n\r\n    // Handlers\r\n    handleSearch,\r\n    handleSortColumnChange,\r\n    handleSortDirectionChange,\r\n    handlePageChange,\r\n  };\r\n}\r\n\r\n// Main DataTable component\r\nexport const DataTable = <TData,>({\r\n  data,\r\n  columns,\r\n  title,\r\n  description,\r\n  className,\r\n  searchable = true,\r\n  searchPlaceholder = \"Search\",\r\n  onSearch,\r\n  defaultSort,\r\n  onSort,\r\n  pagination = {},\r\n  rowActions = [],\r\n  toolbarActions = [],\r\n  footerActions = [],\r\n  loading = false,\r\n  emptyMessage = \"No data available\",\r\n  striped = false,\r\n  hoverable = true,\r\n  getRowKey,\r\n  ...props\r\n}: DataTableProps<TData>) => {\r\n  const {\r\n    paginatedData,\r\n    totalItems,\r\n    searchQuery,\r\n    sortField,\r\n    sortDirection,\r\n    currentPage,\r\n    handleSearch,\r\n    handleSortColumnChange,\r\n    handleSortDirectionChange,\r\n    handlePageChange,\r\n  } = useDataTable(data, {\r\n    searchable,\r\n    defaultSort,\r\n    pageSize: pagination.pageSize,\r\n  });\r\n\r\n  // Handle external search\r\n  React.useEffect(() => {\r\n    if (onSearch) {\r\n      onSearch(searchQuery);\r\n    }\r\n  }, [searchQuery, onSearch]);\r\n\r\n  // Handle external sort\r\n  React.useEffect(() => {\r\n    if (onSort && sortField) {\r\n      onSort(sortField, sortDirection);\r\n    }\r\n  }, [sortField, sortDirection, onSort]);\r\n\r\n  const hasActions = rowActions.length > 0;\r\n  const showPagination = totalItems > (pagination.pageSize || 10);\r\n  const hasSortableColumns = columns.some((col) => col.sortable);\r\n\r\n  return (\r\n    <div className={cn(\"w-full space-y-6\", className)} {...props}>\r\n      {/* Header */}\r\n      {(title || description) && (\r\n        <div className=\"space-y-2\">\r\n          {title && (\r\n            <h1 className=\"text-2xl font-bold text-[var(--color-navy-500)]\">\r\n              {title}\r\n            </h1>\r\n          )}\r\n          {description && (\r\n            <p className=\"text-[var(--color-charcoal-500)] max-w-3xl\">\r\n              {description}\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Toolbar */}\r\n      {(searchable || hasSortableColumns || toolbarActions.length > 0) && (\r\n        <div className=\"flex flex-col sm:flex-row gap-4 justify-between items-start sm:items-center\">\r\n          {/* Left side: Search + Sort Controls */}\r\n          <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center\">\r\n            {/* Search */}\r\n            {searchable && (\r\n              <div className=\"w-full sm:w-auto sm:min-w-[300px]\">\r\n                <Input\r\n                  placeholder={searchPlaceholder}\r\n                  value={searchQuery}\r\n                  onChange={(e) => handleSearch(e.target.value)}\r\n                  leftIcon={<SearchIcon />}\r\n                  className=\"w-full\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Sort Controls */}\r\n            {hasSortableColumns && (\r\n              <ColumnSortControls\r\n                columns={columns}\r\n                currentColumn={sortField}\r\n                currentDirection={sortDirection}\r\n                onColumnChange={handleSortColumnChange}\r\n                onDirectionChange={handleSortDirectionChange}\r\n              />\r\n            )}\r\n          </div>\r\n\r\n          {/* Right side: Toolbar actions */}\r\n          {toolbarActions.length > 0 && (\r\n            <div className=\"flex gap-3\">\r\n              {toolbarActions.map((action, index) => (\r\n                <Button\r\n                  key={index}\r\n                  variant={action.variant || \"outline\"}\r\n                  onClick={action.onClick}\r\n                  leftIcon={action.icon}\r\n                  className={action.className}\r\n                >\r\n                  {action.label}\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Table */}\r\n      <div className=\"border border-[var(--color-border)] rounded-lg overflow-hidden\">\r\n        {loading ? (\r\n          <div className=\"flex items-center justify-center h-64\">\r\n            <div className=\"text-[var(--color-charcoal-500)]\">Loading...</div>\r\n          </div>\r\n        ) : paginatedData.length === 0 ? (\r\n          <div className=\"flex items-center justify-center h-64\">\r\n            <div className=\"text-[var(--color-charcoal-500)]\">\r\n              {emptyMessage}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <Table variant={striped ? \"striped\" : \"default\"}>\r\n            <TableHeader>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableHead\r\n                    key={column.key}\r\n                    className={cn(column.className)}\r\n                    style={column.width ? { width: column.width } : undefined}\r\n                  >\r\n                    {column.header}\r\n                  </TableHead>\r\n                ))}\r\n                {hasActions && (\r\n                  <TableHead className=\"text-center\">Action</TableHead>\r\n                )}\r\n              </TableRow>\r\n            </TableHeader>\r\n            <TableBody>\r\n              {paginatedData.map((row, index) => (\r\n                <TableRow\r\n                  key={\r\n                    getRowKey\r\n                      ? getRowKey(row, index)\r\n                      : `row-${currentPage}-${index}`\r\n                  }\r\n                  variant={striped ? \"striped\" : \"default\"}\r\n                >\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.key}\r\n                      className={cn(column.className)}\r\n                    >\r\n                      {column.render\r\n                        ? column.render((row as any)[column.key], row, index)\r\n                        : String((row as any)[column.key] || \"\")}\r\n                    </TableCell>\r\n                  ))}\r\n                  {hasActions && (\r\n                    <TableCell>\r\n                      <div className=\"flex justify-center gap-2\">\r\n                        {rowActions.map((action, actionIndex) => (\r\n                          <Button\r\n                            key={actionIndex}\r\n                            variant={action.variant || \"ghost\"}\r\n                            size=\"sm\"\r\n                            onClick={() => action.onClick(row, index)}\r\n                            className={action.className}\r\n                            disabled={\r\n                              action.disabled ? action.disabled(row) : false\r\n                            }\r\n                            aria-label={`${action.label} row ${index + 1}`}\r\n                          >\r\n                            {action.icon || action.label}\r\n                          </Button>\r\n                        ))}\r\n                      </div>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </div>\r\n\r\n      {/* Pagination */}\r\n      {showPagination && (\r\n        <Pagination\r\n          totalItems={totalItems}\r\n          currentPage={currentPage}\r\n          itemsPerPage={pagination.pageSize || 10}\r\n          onPageChange={handlePageChange}\r\n          showResults={pagination.showResults}\r\n          maxVisiblePages={pagination.maxVisiblePages}\r\n        />\r\n      )}\r\n\r\n      {/* Footer actions */}\r\n      {footerActions.length > 0 && (\r\n        <div className=\"flex justify-end gap-3\">\r\n          {footerActions.map((action, index) => (\r\n            <Button\r\n              key={index}\r\n              variant={action.variant || \"primary\"}\r\n              onClick={action.onClick}\r\n              leftIcon={action.icon}\r\n              className={action.className}\r\n            >\r\n              {action.label}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export default row actions for common use cases\r\nexport const createDefaultRowActions = <TData,>(\r\n  onEdit?: (row: TData) => void,\r\n  onDelete?: (row: TData) => void\r\n): DataTableAction<TData>[] => {\r\n  const actions: DataTableAction<TData>[] = [];\r\n\r\n  if (onEdit) {\r\n    actions.push({\r\n      label: \"Edit\",\r\n      icon: <EditIcon />,\r\n      onClick: onEdit,\r\n      variant: \"ghost\",\r\n    });\r\n  }\r\n\r\n  if (onDelete) {\r\n    actions.push({\r\n      label: \"Delete\",\r\n      icon: <DeleteIcon />,\r\n      onClick: onDelete,\r\n      variant: \"ghost\",\r\n      className: \"text-destructive hover:text-destructive\",\r\n    });\r\n  }\r\n\r\n  return actions;\r\n};\r\n\r\n// Export the hook for advanced use cases\r\nexport { useDataTable };\r\n"]}