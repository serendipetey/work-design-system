{"version":3,"file":"sidebar-business-logo.js","sourceRoot":"","sources":["../../../src/ui/sidebar-business-logo.tsx"],"names":[],"mappings":"AAAA,uDAAuD;AACvD,YAAY,CAAC;;AAEb,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,GAAG,EAAqB,MAAM,0BAA0B,CAAC;AAClE,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAC;AACzC,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAEjC,MAAM,2BAA2B,GAAG,GAAG,CAAC;IACtC,sCAAsC;IACtC,uCAAuC;IACvC,2BAA2B;CAC5B,CAAC,CAAC;AA2BH,MAAM,mBAAmB,GAAG,KAAK,CAAC,UAAU,CAI1C,CACE,EACE,SAAS,EACT,YAAY,GAAG,eAAe,EAC9B,OAAO,EACP,KAAK,GAAG,GAAG,EACX,MAAM,GAAG,EAAE,EACX,OAAO,EACP,GAAG,KAAK,EACT,EACD,GAAG,EACH,EAAE;IACF,MAAM,WAAW,GAAG,CAAC,CAAC,OAAO,CAAC;IAE9B,MAAM,WAAW,GAAG,OAAO,CAAC,CAAC,CAAC,CAC5B,cACE,GAAG,EAAE,OAAO,EACZ,GAAG,EAAE,GAAG,YAAY,OAAO,EAC3B,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,EACd,SAAS,EAAC,kCAAkC,EAC5C,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,GAC5B,CACH,CAAC,CAAC,CAAC;IACF,oCAAoC;IACpC,eAAK,SAAS,EAAC,yBAAyB,aACtC,cAAK,SAAS,EAAC,6EAA6E,YAC1F,KAAC,SAAS,IAAC,SAAS,EAAC,mCAAmC,GAAG,GACvD,EACN,eAAM,SAAS,EAAC,uEAAuE,YACpF,YAAY,GACR,IACH,CACP,CAAC;IAEF,MAAM,eAAe,GAAG,EAAE,CACxB,2BAA2B,EAAE,EAC7B,WAAW,IAAI;QACb,gBAAgB;QAChB,kCAAkC;QAClC,gCAAgC;QAChC,4BAA4B;QAC5B,yEAAyE;QACzE,0CAA0C;KAC3C,EACD,SAAS,CACV,CAAC;IAEF,IAAI,WAAW,EAAE,CAAC;QAChB,OAAO,CACL,iBACE,GAAG,EAAE,GAA4C,EACjD,OAAO,EAAE,OAAO,gBACJ,GAAG,YAAY,OAAO,EAClC,SAAS,EAAE,eAAe,KACrB,KAAuD,YAE3D,WAAW,GACL,CACV,CAAC;IACJ,CAAC;IAED,OAAO,CACL,cACE,GAAG,EAAE,GAAyC,EAC9C,SAAS,EAAE,eAAe,KACrB,KAA8C,YAElD,WAAW,GACR,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AACF,mBAAmB,CAAC,WAAW,GAAG,qBAAqB,CAAC;AAExD,OAAO,EAAE,mBAAmB,EAAE,2BAA2B,EAAE,CAAC","sourcesContent":["// packages/components/src/ui/sidebar-business-logo.tsx\r\n\"use client\";\r\n\r\nimport * as React from \"react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { Building2 } from \"lucide-react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst sidebarBusinessLogoVariants = cva([\r\n  \"flex items-center justify-center p-6\",\r\n  \"border-b border-[var(--color-border)]\",\r\n  \"bg-[var(--color-surface)]\",\r\n]);\r\n\r\nexport interface SidebarBusinessLogoProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof sidebarBusinessLogoVariants> {\r\n  /**\r\n   * Business/company name for alt text and fallback\r\n   */\r\n  businessName?: string;\r\n  /**\r\n   * Logo image URL - if not provided, shows placeholder\r\n   */\r\n  logoUrl?: string;\r\n  /**\r\n   * Logo image width\r\n   */\r\n  width?: number;\r\n  /**\r\n   * Logo image height\r\n   */\r\n  height?: number;\r\n  /**\r\n   * Click handler for logo interaction (optional)\r\n   */\r\n  onClick?: () => void;\r\n}\r\n\r\nconst SidebarBusinessLogo = React.forwardRef<\r\n  HTMLDivElement | HTMLButtonElement,\r\n  SidebarBusinessLogoProps\r\n>(\r\n  (\r\n    {\r\n      className,\r\n      businessName = \"Your Business\",\r\n      logoUrl,\r\n      width = 120,\r\n      height = 40,\r\n      onClick,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const isClickable = !!onClick;\r\n\r\n    const logoContent = logoUrl ? (\r\n      <img\r\n        src={logoUrl}\r\n        alt={`${businessName} logo`}\r\n        width={width}\r\n        height={height}\r\n        className=\"max-w-full h-auto object-contain\"\r\n        style={{ maxHeight: height }}\r\n      />\r\n    ) : (\r\n      // Placeholder when no logo provided\r\n      <div className=\"flex items-center gap-3\">\r\n        <div className=\"w-8 h-8 rounded bg-[var(--color-navy-500)] flex items-center justify-center\">\r\n          <Building2 className=\"w-5 h-5 text-[var(--color-white)]\" />\r\n        </div>\r\n        <span className=\"text-lg font-bold text-[var(--color-navy-500)] truncate max-w-[140px]\">\r\n          {businessName}\r\n        </span>\r\n      </div>\r\n    );\r\n\r\n    const commonClassName = cn(\r\n      sidebarBusinessLogoVariants(),\r\n      isClickable && [\r\n        \"cursor-pointer\",\r\n        \"hover:bg-[var(--color-navy-100)]\",\r\n        \"transition-colors duration-150\",\r\n        \"focus-visible:outline-none\",\r\n        \"focus:ring-2 focus:ring-[var(--color-border-focus)] focus:ring-offset-1\",\r\n        \"focus:ring-offset-[var(--color-surface)]\",\r\n      ],\r\n      className\r\n    );\r\n\r\n    if (isClickable) {\r\n      return (\r\n        <button\r\n          ref={ref as React.ForwardedRef<HTMLButtonElement>}\r\n          onClick={onClick}\r\n          aria-label={`${businessName} home`}\r\n          className={commonClassName}\r\n          {...(props as React.ButtonHTMLAttributes<HTMLButtonElement>)}\r\n        >\r\n          {logoContent}\r\n        </button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref as React.ForwardedRef<HTMLDivElement>}\r\n        className={commonClassName}\r\n        {...(props as React.HTMLAttributes<HTMLDivElement>)}\r\n      >\r\n        {logoContent}\r\n      </div>\r\n    );\r\n  }\r\n);\r\nSidebarBusinessLogo.displayName = \"SidebarBusinessLogo\";\r\n\r\nexport { SidebarBusinessLogo, sidebarBusinessLogoVariants };\r\n"]}